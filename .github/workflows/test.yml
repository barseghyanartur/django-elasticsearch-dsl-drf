name: test

on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        es-version: ['6', '7']
        include:
        - python-version: 3.6
          es-version: '7'
          tox_env: py36-django{22,31,32}-elasticsearch7

        - python-version: 3.6
          es-version: '6'
          tox_env: py36-django{22,31,32}-elasticsearch6

        - python-version: 3.7
          es-version: '7'
          tox_env: py37-django{22,31,32}-elasticsearch7

        - python-version: 3.7
          es-version: '6'
          tox_env: py37-django{22,31,32}-elasticsearch6

        - python-version: 3.8
          es-version: '7'
          tox_env: py38-django{22,31,32,40}-elasticsearch7

        - python-version: 3.8
          es-version: '6'
          tox_env: py38-django{22,31,32}-elasticsearch6

        - python-version: 3.9
          es-version: '7'
          tox_env: py39-django{22,31,32,40}-elasticsearch7

        - python-version: 3.9
          es-version: '6'
          tox_env: py39-django{22,31,32}-elasticsearch6

        - python-version: 3.10
          es-version: '7'
          tox_env: py310-django{32,40}-elasticsearch7

        - python-version: 3.10
          es-version: '6'
          tox_env: py310-django32-elasticsearch6

    services:
      elasticsearch:
        image: bitnami/elasticsearch:${{ matrix.es-version }}
        ports:
          - 9200:9200
        options: >-
          -e="discovery.type=single-node"
          --health-cmd="curl http://localhost:9200/_cluster/health"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pip-tools
        python -m pip install tox
    - name: Run tests
      uses: nick-invision/retry@v2
      with:
        command: tox -r -e '${{ matrix.tox_env }}' -- --color yes
        timeout_minutes: 15
        max_attempts: 3
    - name: Upload to Codecov
      uses: codecov/codecov-action@v2
    - name: Coveralls
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel: true
        flag-name: Run Tests

  coveralls_finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true
        debug: True
